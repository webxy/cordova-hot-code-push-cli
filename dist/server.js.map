{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["/*\n * @Description: \n * @Author: xuyuan\n * @Date: 2023-03-17 16:48:20\n * @LastEditors: xuyuan\n * @LastEditTime: 2023-03-23 11:03:08\n */\n(function(){\n  var path = require('path'),\n      envFile = path.join(process.cwd(), '.chcpenv'),\n      Q = require('q'),\n      _ = require('lodash'),\n      fs = require(\"fs\"),\n      buildDirectory = path.join(process.cwd(), '.chcpbuild'),\n      watch = require('watch'),\n      express = require('express'),\n      app = express(),\n      assetPort = process.env.PORT || 31284,\n      disablePublicTunnel = process.env.DISABLE_PUBLIC_TUNNEL || false,\n      compression = require('compression'),\n      build = require('./build.js').execute,\n      minimatch = require('minimatch'),\n      hidefile = require('hidefile'),\n      io,\n      chcpContext,\n      sourceDirectory,\n      ignoredFiles,\n      opts = {};\n\n  module.exports = {\n    execute: execute\n  };\n\n  function updateLocalEnv(localEnv) {\n    localEnv.config_url = localEnv.content_url + '/chcp.json';\n\n    var json = JSON.stringify(localEnv, null, 2);\n    fs.writeFileSync(envFile, json);\n\n    return localEnv;\n  }\n\n  function execute(context) {\n    console.log('start')\n    chcpContext = context;\n    ignoredFiles = context.ignoredFiles;\n    chcpContext.argv.localdev = true;\n    sourceDirectory = chcpContext.sourceDirectory;\n\n    var executeDfd = Q.defer(),\n      funcs = [];\n\n    funcs.push(function(){\n      if (disablePublicTunnel)\n        return;\n      return publicTunnel(assetPort);\n    });\n\n    funcs.push(function(content_url) {\n      var dfd = Q.defer();\n\n      if (!disablePublicTunnel) {\n        opts.content_url = content_url;\n        chcpContext.argv.content_url = content_url;\n      }\n\n      dfd.resolve();\n      return dfd.promise;\n    });\n\n    funcs.push(function(debugOpts){\n      if(debugOpts){\n        opts.debug_url = debugOpts.debug_url;\n        opts.console_url = debugOpts.console_url;\n      }\n\n      return assetServer(opts);\n    });\n\n    funcs.push(function(local_url){\n      console.log('local_url', local_url);\n      opts.local_url = local_url;\n\n      return build(chcpContext);\n    });\n\n    funcs.push(function(config){\n      if (disablePublicTunnel) {\n        updateLocalEnv({ content_url: config.content_url })\n      }\n      console.log('cordova-hcp local server available at: ' + opts.local_url);\n      console.log('cordova-hcp public server available at: ' + config.content_url);\n    });\n\n    return funcs.reduce(Q.when, Q('initial'));\n  }\n\n  function fileChangeFilter(file) {\n    // Ignore changes in files from the ignore list\n    var fileIsAllowed = true;\n    var relativeFilePath = path.relative(chcpContext.sourceDirectory, file);\n    for (var i=0, len=ignoredFiles.length; i<len; i++) {\n      if (hidefile.isHiddenSync(file) || minimatch(relativeFilePath, ignoredFiles[i])) {\n        fileIsAllowed = false;\n        break;\n      }\n    }\n\n    return fileIsAllowed;\n  }\n\n  function assetServer(opts) {\n    var serverDfd = Q.defer(),\n        localUrl = 'http://localhost:' + assetPort;\n\n    // If a lot of files changes at the same time, we only want to trigger the change event once.\n    handleFileChange = _.debounce(handleFileChange, 500);\n\n    try {\n      killCaches(app);\n      serveStaticAssets(app, opts);\n      serveSocketIO(app);\n      watchForFileChange();\n      serverDfd.resolve(localUrl);\n    } catch(err) {\n      console.error('assetServer error: ', err);\n      serverDfd.reject(err);\n    }\n\n    return serverDfd.promise;\n  }\n\n  function watchForFileChange(){\n    // Monitor for file changes\n    console.log('Checking: ', sourceDirectory);\n    watch.watchTree(sourceDirectory, {filter: fileChangeFilter}, function (f, curr, prev) {\n      if (typeof f == \"object\" && prev === null && curr === null) {\n        // Finished walking the tree\n        // console.log('Finished');\n      } else {\n        handleFileChange(f);\n      }\n    });\n  }\n\n  function handleFileChange(file) {\n    console.log('File changed: ', file);\n    build(chcpContext).then(function(config) {\n      console.log('Should trigger reload for build: '+config.release);\n      io.emit('release', { config: config });\n    });\n  }\n\n  function serveSocketIO(app) {\n    // Let's start the server\n    io = require(\"socket.io\")(app.listen(assetPort));\n\n    // Open up socket for file change notifications\n    //io.set('transports', ['polling']);\n    io.on('connection', function(socket){\n      console.log('a user connected');\n      socket.on('disconnect', function(){\n        console.log('user disconnected');\n      });\n    });\n  }\n\n  function serveStaticAssets(app, opts) {\n\n    // Static assets\n    app.use(compression());\n    app.enable('view cache');\n    app.use('/', express.static(sourceDirectory, { maxAge: 0 }));\n  }\n\n  function killCaches(ass) {\n    // Disable caches\n    app.disable('etag');\n    app.use(function(req, res, next) {\n      req.headers['if-none-match'] = 'no-match-for-this';\n      next();\n    });\n  }\n\n  function publicTunnel(port, options){\n    var publicTunnelDfd = Q.defer(),\n        ngrok = require('ngrok');\n    // And make it accessible from the internet\n    ngrok.connect(port, function (err, url) {\n      if (err) {\n        publicTunnelDfd.reject(err);\n        return console.log('Could not create tunnel: ', err);\n      }\n\n      updateLocalEnv({content_url: url});\n\n      publicTunnelDfd.resolve(url);\n    });\n\n\n    return publicTunnelDfd.promise;\n  }\n})();\n"]}